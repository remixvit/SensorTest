ARM GAS  C:\Users\Vit\AppData\Local\Temp\ccJEDx96.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"StatusRegCLK.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.StatusRegCLK_Start,"ax",%progbits
  18              		.align	1
  19              		.global	StatusRegCLK_Start
  20              		.code	16
  21              		.thumb_func
  22              		.type	StatusRegCLK_Start, %function
  23              	StatusRegCLK_Start:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\StatusRegCLK.c"
   1:.\Generated_Source\PSoC4/StatusRegCLK.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/StatusRegCLK.c **** * File Name: StatusRegCLK.c
   3:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
   5:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  Description:
   6:.\Generated_Source\PSoC4/StatusRegCLK.c **** *   Provides system API for the clocking, interrupts and watchdog timer.
   7:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
   8:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  Note:
   9:.\Generated_Source\PSoC4/StatusRegCLK.c **** *   Documentation of the API's in this file is located in the
  10:.\Generated_Source\PSoC4/StatusRegCLK.c **** *   System Reference Guide provided with PSoC Creator.
  11:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
  12:.\Generated_Source\PSoC4/StatusRegCLK.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/StatusRegCLK.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/StatusRegCLK.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/StatusRegCLK.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/StatusRegCLK.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/StatusRegCLK.c **** 
  19:.\Generated_Source\PSoC4/StatusRegCLK.c **** #include <cydevice_trm.h>
  20:.\Generated_Source\PSoC4/StatusRegCLK.c **** #include "StatusRegCLK.h"
  21:.\Generated_Source\PSoC4/StatusRegCLK.c **** 
  22:.\Generated_Source\PSoC4/StatusRegCLK.c **** #if defined CYREG_PERI_DIV_CMD
  23:.\Generated_Source\PSoC4/StatusRegCLK.c **** 
  24:.\Generated_Source\PSoC4/StatusRegCLK.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Function Name: StatusRegCLK_StartEx
  26:.\Generated_Source\PSoC4/StatusRegCLK.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
  28:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Summary:
  29:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  Starts the clock, aligned to the specified running clock.
  30:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
  31:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Parameters:
  32:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  alignClkDiv:  The divider to which phase alignment is performed when the
ARM GAS  C:\Users\Vit\AppData\Local\Temp\ccJEDx96.s 			page 2


  33:.\Generated_Source\PSoC4/StatusRegCLK.c **** *    clock is started.
  34:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
  35:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Returns:
  36:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  None
  37:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
  38:.\Generated_Source\PSoC4/StatusRegCLK.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/StatusRegCLK.c **** void StatusRegCLK_StartEx(uint32 alignClkDiv)
  40:.\Generated_Source\PSoC4/StatusRegCLK.c **** {
  41:.\Generated_Source\PSoC4/StatusRegCLK.c ****     /* Make sure any previous start command has finished. */
  42:.\Generated_Source\PSoC4/StatusRegCLK.c ****     while((StatusRegCLK_CMD_REG & StatusRegCLK_CMD_ENABLE_MASK) != 0u)
  43:.\Generated_Source\PSoC4/StatusRegCLK.c ****     {
  44:.\Generated_Source\PSoC4/StatusRegCLK.c ****     }
  45:.\Generated_Source\PSoC4/StatusRegCLK.c ****     
  46:.\Generated_Source\PSoC4/StatusRegCLK.c ****     /* Specify the target divider and it's alignment divider, and enable. */
  47:.\Generated_Source\PSoC4/StatusRegCLK.c ****     StatusRegCLK_CMD_REG =
  48:.\Generated_Source\PSoC4/StatusRegCLK.c ****         ((uint32)StatusRegCLK__DIV_ID << StatusRegCLK_CMD_DIV_SHIFT)|
  49:.\Generated_Source\PSoC4/StatusRegCLK.c ****         (alignClkDiv << StatusRegCLK_CMD_PA_DIV_SHIFT) |
  50:.\Generated_Source\PSoC4/StatusRegCLK.c ****         (uint32)StatusRegCLK_CMD_ENABLE_MASK;
  51:.\Generated_Source\PSoC4/StatusRegCLK.c **** }
  52:.\Generated_Source\PSoC4/StatusRegCLK.c **** 
  53:.\Generated_Source\PSoC4/StatusRegCLK.c **** #else
  54:.\Generated_Source\PSoC4/StatusRegCLK.c **** 
  55:.\Generated_Source\PSoC4/StatusRegCLK.c **** /*******************************************************************************
  56:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Function Name: StatusRegCLK_Start
  57:.\Generated_Source\PSoC4/StatusRegCLK.c **** ********************************************************************************
  58:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
  59:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Summary:
  60:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  Starts the clock.
  61:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
  62:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Parameters:
  63:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  None
  64:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
  65:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Returns:
  66:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  None
  67:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
  68:.\Generated_Source\PSoC4/StatusRegCLK.c **** *******************************************************************************/
  69:.\Generated_Source\PSoC4/StatusRegCLK.c **** 
  70:.\Generated_Source\PSoC4/StatusRegCLK.c **** void StatusRegCLK_Start(void)
  71:.\Generated_Source\PSoC4/StatusRegCLK.c **** {
  26              		.loc 1 71 0
  27              		.cfi_startproc
  72:.\Generated_Source\PSoC4/StatusRegCLK.c ****     /* Set the bit to enable the clock. */
  73:.\Generated_Source\PSoC4/StatusRegCLK.c ****     StatusRegCLK_ENABLE_REG |= StatusRegCLK__ENABLE_MASK;
  28              		.loc 1 73 0
  29 0000 8021     		mov	r1, #128
  30 0002 034A     		ldr	r2, .L2
  31 0004 0906     		lsl	r1, r1, #24
  32 0006 1368     		ldr	r3, [r2]
  74:.\Generated_Source\PSoC4/StatusRegCLK.c **** }
  33              		.loc 1 74 0
  34              		@ sp needed
  73:.\Generated_Source\PSoC4/StatusRegCLK.c **** }
  35              		.loc 1 73 0
  36 0008 0B43     		orr	r3, r1
  37 000a 1360     		str	r3, [r2]
  38              		.loc 1 74 0
  39 000c 7047     		bx	lr
ARM GAS  C:\Users\Vit\AppData\Local\Temp\ccJEDx96.s 			page 3


  40              	.L3:
  41 000e C046     		.align	2
  42              	.L2:
  43 0010 04000240 		.word	1073872900
  44              		.cfi_endproc
  45              	.LFE0:
  46              		.size	StatusRegCLK_Start, .-StatusRegCLK_Start
  47              		.section	.text.StatusRegCLK_Stop,"ax",%progbits
  48              		.align	1
  49              		.global	StatusRegCLK_Stop
  50              		.code	16
  51              		.thumb_func
  52              		.type	StatusRegCLK_Stop, %function
  53              	StatusRegCLK_Stop:
  54              	.LFB1:
  75:.\Generated_Source\PSoC4/StatusRegCLK.c **** 
  76:.\Generated_Source\PSoC4/StatusRegCLK.c **** #endif /* CYREG_PERI_DIV_CMD */
  77:.\Generated_Source\PSoC4/StatusRegCLK.c **** 
  78:.\Generated_Source\PSoC4/StatusRegCLK.c **** 
  79:.\Generated_Source\PSoC4/StatusRegCLK.c **** /*******************************************************************************
  80:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Function Name: StatusRegCLK_Stop
  81:.\Generated_Source\PSoC4/StatusRegCLK.c **** ********************************************************************************
  82:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
  83:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Summary:
  84:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  Stops the clock and returns immediately. This API does not require the
  85:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  source clock to be running but may return before the hardware is actually
  86:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  disabled.
  87:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
  88:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Parameters:
  89:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  None
  90:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
  91:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Returns:
  92:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  None
  93:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
  94:.\Generated_Source\PSoC4/StatusRegCLK.c **** *******************************************************************************/
  95:.\Generated_Source\PSoC4/StatusRegCLK.c **** void StatusRegCLK_Stop(void)
  96:.\Generated_Source\PSoC4/StatusRegCLK.c **** {
  55              		.loc 1 96 0
  56              		.cfi_startproc
  97:.\Generated_Source\PSoC4/StatusRegCLK.c **** #if defined CYREG_PERI_DIV_CMD
  98:.\Generated_Source\PSoC4/StatusRegCLK.c **** 
  99:.\Generated_Source\PSoC4/StatusRegCLK.c ****     /* Make sure any previous start command has finished. */
 100:.\Generated_Source\PSoC4/StatusRegCLK.c ****     while((StatusRegCLK_CMD_REG & StatusRegCLK_CMD_ENABLE_MASK) != 0u)
 101:.\Generated_Source\PSoC4/StatusRegCLK.c ****     {
 102:.\Generated_Source\PSoC4/StatusRegCLK.c ****     }
 103:.\Generated_Source\PSoC4/StatusRegCLK.c ****     
 104:.\Generated_Source\PSoC4/StatusRegCLK.c ****     /* Specify the target divider and it's alignment divider, and disable. */
 105:.\Generated_Source\PSoC4/StatusRegCLK.c ****     StatusRegCLK_CMD_REG =
 106:.\Generated_Source\PSoC4/StatusRegCLK.c ****         ((uint32)StatusRegCLK__DIV_ID << StatusRegCLK_CMD_DIV_SHIFT)|
 107:.\Generated_Source\PSoC4/StatusRegCLK.c ****         ((uint32)StatusRegCLK_CMD_DISABLE_MASK);
 108:.\Generated_Source\PSoC4/StatusRegCLK.c **** 
 109:.\Generated_Source\PSoC4/StatusRegCLK.c **** #else
 110:.\Generated_Source\PSoC4/StatusRegCLK.c **** 
 111:.\Generated_Source\PSoC4/StatusRegCLK.c ****     /* Clear the bit to disable the clock. */
 112:.\Generated_Source\PSoC4/StatusRegCLK.c ****     StatusRegCLK_ENABLE_REG &= (uint32)(~StatusRegCLK__ENABLE_MASK);
  57              		.loc 1 112 0
  58 0000 024A     		ldr	r2, .L5
ARM GAS  C:\Users\Vit\AppData\Local\Temp\ccJEDx96.s 			page 4


 113:.\Generated_Source\PSoC4/StatusRegCLK.c ****     
 114:.\Generated_Source\PSoC4/StatusRegCLK.c **** #endif /* CYREG_PERI_DIV_CMD */
 115:.\Generated_Source\PSoC4/StatusRegCLK.c **** }
  59              		.loc 1 115 0
  60              		@ sp needed
 112:.\Generated_Source\PSoC4/StatusRegCLK.c ****     
  61              		.loc 1 112 0
  62 0002 1368     		ldr	r3, [r2]
  63 0004 5B00     		lsl	r3, r3, #1
  64 0006 5B08     		lsr	r3, r3, #1
  65 0008 1360     		str	r3, [r2]
  66              		.loc 1 115 0
  67 000a 7047     		bx	lr
  68              	.L6:
  69              		.align	2
  70              	.L5:
  71 000c 04000240 		.word	1073872900
  72              		.cfi_endproc
  73              	.LFE1:
  74              		.size	StatusRegCLK_Stop, .-StatusRegCLK_Stop
  75              		.section	.text.StatusRegCLK_SetFractionalDividerRegister,"ax",%progbits
  76              		.align	1
  77              		.global	StatusRegCLK_SetFractionalDividerRegister
  78              		.code	16
  79              		.thumb_func
  80              		.type	StatusRegCLK_SetFractionalDividerRegister, %function
  81              	StatusRegCLK_SetFractionalDividerRegister:
  82              	.LFB2:
 116:.\Generated_Source\PSoC4/StatusRegCLK.c **** 
 117:.\Generated_Source\PSoC4/StatusRegCLK.c **** 
 118:.\Generated_Source\PSoC4/StatusRegCLK.c **** /*******************************************************************************
 119:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Function Name: StatusRegCLK_SetFractionalDividerRegister
 120:.\Generated_Source\PSoC4/StatusRegCLK.c **** ********************************************************************************
 121:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
 122:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Summary:
 123:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  Modifies the clock divider and the fractional divider.
 124:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
 125:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Parameters:
 126:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  clkDivider:  Divider register value (0-65535). This value is NOT the
 127:.\Generated_Source\PSoC4/StatusRegCLK.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 128:.\Generated_Source\PSoC4/StatusRegCLK.c **** *    to divide the clock by 2, this parameter should be set to 1.
 129:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  fracDivider:  Fractional Divider register value (0-31).
 130:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Returns:
 131:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  None
 132:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
 133:.\Generated_Source\PSoC4/StatusRegCLK.c **** *******************************************************************************/
 134:.\Generated_Source\PSoC4/StatusRegCLK.c **** void StatusRegCLK_SetFractionalDividerRegister(uint16 clkDivider, uint8 clkFractional)
 135:.\Generated_Source\PSoC4/StatusRegCLK.c **** {
  83              		.loc 1 135 0
  84              		.cfi_startproc
  85              	.LVL0:
 136:.\Generated_Source\PSoC4/StatusRegCLK.c ****     uint32 maskVal;
 137:.\Generated_Source\PSoC4/StatusRegCLK.c ****     uint32 regVal;
 138:.\Generated_Source\PSoC4/StatusRegCLK.c ****     
 139:.\Generated_Source\PSoC4/StatusRegCLK.c **** #if defined (StatusRegCLK__FRAC_MASK) || defined (CYREG_PERI_DIV_CMD)
 140:.\Generated_Source\PSoC4/StatusRegCLK.c ****     
 141:.\Generated_Source\PSoC4/StatusRegCLK.c **** 	/* get all but divider bits */
ARM GAS  C:\Users\Vit\AppData\Local\Temp\ccJEDx96.s 			page 5


 142:.\Generated_Source\PSoC4/StatusRegCLK.c ****     maskVal = StatusRegCLK_DIV_REG & 
 143:.\Generated_Source\PSoC4/StatusRegCLK.c ****                     (uint32)(~(uint32)(StatusRegCLK_DIV_INT_MASK | StatusRegCLK_DIV_FRAC_MASK)); 
 144:.\Generated_Source\PSoC4/StatusRegCLK.c **** 	/* combine mask and new divider vals into 32-bit value */
 145:.\Generated_Source\PSoC4/StatusRegCLK.c ****     regVal = maskVal |
 146:.\Generated_Source\PSoC4/StatusRegCLK.c ****         ((uint32)((uint32)clkDivider <<  StatusRegCLK_DIV_INT_SHIFT) & StatusRegCLK_DIV_INT_MASK) |
 147:.\Generated_Source\PSoC4/StatusRegCLK.c ****         ((uint32)((uint32)clkFractional << StatusRegCLK_DIV_FRAC_SHIFT) & StatusRegCLK_DIV_FRAC_MAS
 148:.\Generated_Source\PSoC4/StatusRegCLK.c ****     
 149:.\Generated_Source\PSoC4/StatusRegCLK.c **** #else
 150:.\Generated_Source\PSoC4/StatusRegCLK.c ****     /* get all but integer divider bits */
 151:.\Generated_Source\PSoC4/StatusRegCLK.c ****     maskVal = StatusRegCLK_DIV_REG & (uint32)(~(uint32)StatusRegCLK__DIVIDER_MASK);
  86              		.loc 1 151 0
  87 0000 034A     		ldr	r2, .L8
 152:.\Generated_Source\PSoC4/StatusRegCLK.c ****     /* combine mask and new divider val into 32-bit value */
 153:.\Generated_Source\PSoC4/StatusRegCLK.c ****     regVal = clkDivider | maskVal;
 154:.\Generated_Source\PSoC4/StatusRegCLK.c ****     
 155:.\Generated_Source\PSoC4/StatusRegCLK.c **** #endif /* StatusRegCLK__FRAC_MASK || CYREG_PERI_DIV_CMD */
 156:.\Generated_Source\PSoC4/StatusRegCLK.c **** 
 157:.\Generated_Source\PSoC4/StatusRegCLK.c ****     StatusRegCLK_DIV_REG = regVal;
 158:.\Generated_Source\PSoC4/StatusRegCLK.c **** }
  88              		.loc 1 158 0
  89              		@ sp needed
 151:.\Generated_Source\PSoC4/StatusRegCLK.c ****     /* combine mask and new divider val into 32-bit value */
  90              		.loc 1 151 0
  91 0002 1368     		ldr	r3, [r2]
  92              	.LVL1:
  93 0004 1B0C     		lsr	r3, r3, #16
  94              	.LVL2:
  95 0006 1B04     		lsl	r3, r3, #16
 153:.\Generated_Source\PSoC4/StatusRegCLK.c ****     
  96              		.loc 1 153 0
  97 0008 1843     		orr	r0, r3
  98              	.LVL3:
 157:.\Generated_Source\PSoC4/StatusRegCLK.c **** }
  99              		.loc 1 157 0
 100 000a 1060     		str	r0, [r2]
 101              		.loc 1 158 0
 102 000c 7047     		bx	lr
 103              	.L9:
 104 000e C046     		.align	2
 105              	.L8:
 106 0010 04000240 		.word	1073872900
 107              		.cfi_endproc
 108              	.LFE2:
 109              		.size	StatusRegCLK_SetFractionalDividerRegister, .-StatusRegCLK_SetFractionalDividerRegister
 110              		.section	.text.StatusRegCLK_GetDividerRegister,"ax",%progbits
 111              		.align	1
 112              		.global	StatusRegCLK_GetDividerRegister
 113              		.code	16
 114              		.thumb_func
 115              		.type	StatusRegCLK_GetDividerRegister, %function
 116              	StatusRegCLK_GetDividerRegister:
 117              	.LFB3:
 159:.\Generated_Source\PSoC4/StatusRegCLK.c **** 
 160:.\Generated_Source\PSoC4/StatusRegCLK.c **** 
 161:.\Generated_Source\PSoC4/StatusRegCLK.c **** /*******************************************************************************
 162:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Function Name: StatusRegCLK_GetDividerRegister
 163:.\Generated_Source\PSoC4/StatusRegCLK.c **** ********************************************************************************
ARM GAS  C:\Users\Vit\AppData\Local\Temp\ccJEDx96.s 			page 6


 164:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
 165:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Summary:
 166:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  Gets the clock divider register value.
 167:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
 168:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Parameters:
 169:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  None
 170:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
 171:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Returns:
 172:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 173:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  divide by 2, the return value will be 1.
 174:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
 175:.\Generated_Source\PSoC4/StatusRegCLK.c **** *******************************************************************************/
 176:.\Generated_Source\PSoC4/StatusRegCLK.c **** uint16 StatusRegCLK_GetDividerRegister(void)
 177:.\Generated_Source\PSoC4/StatusRegCLK.c **** {
 118              		.loc 1 177 0
 119              		.cfi_startproc
 178:.\Generated_Source\PSoC4/StatusRegCLK.c ****     return (uint16)((StatusRegCLK_DIV_REG & StatusRegCLK_DIV_INT_MASK)
 120              		.loc 1 178 0
 121 0000 014B     		ldr	r3, .L11
 179:.\Generated_Source\PSoC4/StatusRegCLK.c ****         >> StatusRegCLK_DIV_INT_SHIFT);
 180:.\Generated_Source\PSoC4/StatusRegCLK.c **** }
 122              		.loc 1 180 0
 123              		@ sp needed
 178:.\Generated_Source\PSoC4/StatusRegCLK.c ****     return (uint16)((StatusRegCLK_DIV_REG & StatusRegCLK_DIV_INT_MASK)
 124              		.loc 1 178 0
 125 0002 1868     		ldr	r0, [r3]
 126 0004 80B2     		uxth	r0, r0
 127              		.loc 1 180 0
 128 0006 7047     		bx	lr
 129              	.L12:
 130              		.align	2
 131              	.L11:
 132 0008 04000240 		.word	1073872900
 133              		.cfi_endproc
 134              	.LFE3:
 135              		.size	StatusRegCLK_GetDividerRegister, .-StatusRegCLK_GetDividerRegister
 136              		.section	.text.StatusRegCLK_GetFractionalDividerRegister,"ax",%progbits
 137              		.align	1
 138              		.global	StatusRegCLK_GetFractionalDividerRegister
 139              		.code	16
 140              		.thumb_func
 141              		.type	StatusRegCLK_GetFractionalDividerRegister, %function
 142              	StatusRegCLK_GetFractionalDividerRegister:
 143              	.LFB4:
 181:.\Generated_Source\PSoC4/StatusRegCLK.c **** 
 182:.\Generated_Source\PSoC4/StatusRegCLK.c **** 
 183:.\Generated_Source\PSoC4/StatusRegCLK.c **** /*******************************************************************************
 184:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Function Name: StatusRegCLK_GetFractionalDividerRegister
 185:.\Generated_Source\PSoC4/StatusRegCLK.c **** ********************************************************************************
 186:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
 187:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Summary:
 188:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  Gets the clock fractional divider register value.
 189:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
 190:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Parameters:
 191:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  None
 192:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
 193:.\Generated_Source\PSoC4/StatusRegCLK.c **** * Returns:
ARM GAS  C:\Users\Vit\AppData\Local\Temp\ccJEDx96.s 			page 7


 194:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  Fractional Divide value of the clock
 195:.\Generated_Source\PSoC4/StatusRegCLK.c **** *  0 if the fractional divider is not in use.
 196:.\Generated_Source\PSoC4/StatusRegCLK.c **** *
 197:.\Generated_Source\PSoC4/StatusRegCLK.c **** *******************************************************************************/
 198:.\Generated_Source\PSoC4/StatusRegCLK.c **** uint8 StatusRegCLK_GetFractionalDividerRegister(void)
 199:.\Generated_Source\PSoC4/StatusRegCLK.c **** {
 144              		.loc 1 199 0
 145              		.cfi_startproc
 200:.\Generated_Source\PSoC4/StatusRegCLK.c **** #if defined (StatusRegCLK__FRAC_MASK)
 201:.\Generated_Source\PSoC4/StatusRegCLK.c ****     /* return fractional divider bits */
 202:.\Generated_Source\PSoC4/StatusRegCLK.c ****     return (uint8)((StatusRegCLK_DIV_REG & StatusRegCLK_DIV_FRAC_MASK)
 203:.\Generated_Source\PSoC4/StatusRegCLK.c ****         >> StatusRegCLK_DIV_FRAC_SHIFT);
 204:.\Generated_Source\PSoC4/StatusRegCLK.c **** #else
 205:.\Generated_Source\PSoC4/StatusRegCLK.c ****     return 0u;
 206:.\Generated_Source\PSoC4/StatusRegCLK.c **** #endif /* StatusRegCLK__FRAC_MASK */
 207:.\Generated_Source\PSoC4/StatusRegCLK.c **** }
 146              		.loc 1 207 0
 147 0000 0020     		mov	r0, #0
 148              		@ sp needed
 149 0002 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE4:
 152              		.size	StatusRegCLK_GetFractionalDividerRegister, .-StatusRegCLK_GetFractionalDividerRegister
 153              		.text
 154              	.Letext0:
 155              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 156              		.section	.debug_info,"",%progbits
 157              	.Ldebug_info0:
 158 0000 49010000 		.4byte	0x149
 159 0004 0400     		.2byte	0x4
 160 0006 00000000 		.4byte	.Ldebug_abbrev0
 161 000a 04       		.byte	0x4
 162 000b 01       		.uleb128 0x1
 163 000c 19000000 		.4byte	.LASF24
 164 0010 01       		.byte	0x1
 165 0011 92010000 		.4byte	.LASF25
 166 0015 D5000000 		.4byte	.LASF26
 167 0019 00000000 		.4byte	.Ldebug_ranges0+0
 168 001d 00000000 		.4byte	0
 169 0021 00000000 		.4byte	.Ldebug_line0
 170 0025 02       		.uleb128 0x2
 171 0026 01       		.byte	0x1
 172 0027 06       		.byte	0x6
 173 0028 31020000 		.4byte	.LASF0
 174 002c 02       		.uleb128 0x2
 175 002d 01       		.byte	0x1
 176 002e 08       		.byte	0x8
 177 002f B5000000 		.4byte	.LASF1
 178 0033 02       		.uleb128 0x2
 179 0034 02       		.byte	0x2
 180 0035 05       		.byte	0x5
 181 0036 F8010000 		.4byte	.LASF2
 182 003a 02       		.uleb128 0x2
 183 003b 02       		.byte	0x2
 184 003c 07       		.byte	0x7
 185 003d 27010000 		.4byte	.LASF3
 186 0041 02       		.uleb128 0x2
ARM GAS  C:\Users\Vit\AppData\Local\Temp\ccJEDx96.s 			page 8


 187 0042 04       		.byte	0x4
 188 0043 05       		.byte	0x5
 189 0044 28020000 		.4byte	.LASF4
 190 0048 02       		.uleb128 0x2
 191 0049 04       		.byte	0x4
 192 004a 07       		.byte	0x7
 193 004b 15010000 		.4byte	.LASF5
 194 004f 02       		.uleb128 0x2
 195 0050 08       		.byte	0x8
 196 0051 05       		.byte	0x5
 197 0052 E5010000 		.4byte	.LASF6
 198 0056 02       		.uleb128 0x2
 199 0057 08       		.byte	0x8
 200 0058 07       		.byte	0x7
 201 0059 CE010000 		.4byte	.LASF7
 202 005d 03       		.uleb128 0x3
 203 005e 04       		.byte	0x4
 204 005f 05       		.byte	0x5
 205 0060 696E7400 		.ascii	"int\000"
 206 0064 02       		.uleb128 0x2
 207 0065 04       		.byte	0x4
 208 0066 07       		.byte	0x7
 209 0067 C1010000 		.4byte	.LASF8
 210 006b 04       		.uleb128 0x4
 211 006c 02020000 		.4byte	.LASF9
 212 0070 02       		.byte	0x2
 213 0071 C2       		.byte	0xc2
 214 0072 2C000000 		.4byte	0x2c
 215 0076 04       		.uleb128 0x4
 216 0077 8B010000 		.4byte	.LASF10
 217 007b 02       		.byte	0x2
 218 007c C3       		.byte	0xc3
 219 007d 3A000000 		.4byte	0x3a
 220 0081 04       		.uleb128 0x4
 221 0082 BA010000 		.4byte	.LASF11
 222 0086 02       		.byte	0x2
 223 0087 C4       		.byte	0xc4
 224 0088 48000000 		.4byte	0x48
 225 008c 02       		.uleb128 0x2
 226 008d 04       		.byte	0x4
 227 008e 04       		.byte	0x4
 228 008f AF000000 		.4byte	.LASF12
 229 0093 02       		.uleb128 0x2
 230 0094 08       		.byte	0x8
 231 0095 04       		.byte	0x4
 232 0096 6F010000 		.4byte	.LASF13
 233 009a 02       		.uleb128 0x2
 234 009b 01       		.byte	0x1
 235 009c 08       		.byte	0x8
 236 009d F3010000 		.4byte	.LASF14
 237 00a1 05       		.uleb128 0x5
 238 00a2 00000000 		.4byte	.LASF15
 239 00a6 02       		.byte	0x2
 240 00a7 6E01     		.2byte	0x16e
 241 00a9 AD000000 		.4byte	0xad
 242 00ad 06       		.uleb128 0x6
 243 00ae 81000000 		.4byte	0x81
ARM GAS  C:\Users\Vit\AppData\Local\Temp\ccJEDx96.s 			page 9


 244 00b2 07       		.uleb128 0x7
 245 00b3 06000000 		.4byte	.LASF16
 246 00b7 01       		.byte	0x1
 247 00b8 46       		.byte	0x46
 248 00b9 00000000 		.4byte	.LFB0
 249 00bd 14000000 		.4byte	.LFE0-.LFB0
 250 00c1 01       		.uleb128 0x1
 251 00c2 9C       		.byte	0x9c
 252 00c3 07       		.uleb128 0x7
 253 00c4 C3000000 		.4byte	.LASF17
 254 00c8 01       		.byte	0x1
 255 00c9 5F       		.byte	0x5f
 256 00ca 00000000 		.4byte	.LFB1
 257 00ce 10000000 		.4byte	.LFE1-.LFB1
 258 00d2 01       		.uleb128 0x1
 259 00d3 9C       		.byte	0x9c
 260 00d4 08       		.uleb128 0x8
 261 00d5 3A010000 		.4byte	.LASF27
 262 00d9 01       		.byte	0x1
 263 00da 86       		.byte	0x86
 264 00db 00000000 		.4byte	.LFB2
 265 00df 14000000 		.4byte	.LFE2-.LFB2
 266 00e3 01       		.uleb128 0x1
 267 00e4 9C       		.byte	0x9c
 268 00e5 22010000 		.4byte	0x122
 269 00e9 09       		.uleb128 0x9
 270 00ea 64010000 		.4byte	.LASF18
 271 00ee 01       		.byte	0x1
 272 00ef 86       		.byte	0x86
 273 00f0 76000000 		.4byte	0x76
 274 00f4 00000000 		.4byte	.LLST0
 275 00f8 0A       		.uleb128 0xa
 276 00f9 7D010000 		.4byte	.LASF19
 277 00fd 01       		.byte	0x1
 278 00fe 86       		.byte	0x86
 279 00ff 6B000000 		.4byte	0x6b
 280 0103 01       		.uleb128 0x1
 281 0104 51       		.byte	0x51
 282 0105 0B       		.uleb128 0xb
 283 0106 A7000000 		.4byte	.LASF20
 284 010a 01       		.byte	0x1
 285 010b 88       		.byte	0x88
 286 010c 81000000 		.4byte	0x81
 287 0110 21000000 		.4byte	.LLST1
 288 0114 0C       		.uleb128 0xc
 289 0115 76010000 		.4byte	.LASF21
 290 0119 01       		.byte	0x1
 291 011a 89       		.byte	0x89
 292 011b 81000000 		.4byte	0x81
 293 011f 01       		.uleb128 0x1
 294 0120 50       		.byte	0x50
 295 0121 00       		.byte	0
 296 0122 0D       		.uleb128 0xd
 297 0123 08020000 		.4byte	.LASF22
 298 0127 01       		.byte	0x1
 299 0128 B0       		.byte	0xb0
 300 0129 76000000 		.4byte	0x76
ARM GAS  C:\Users\Vit\AppData\Local\Temp\ccJEDx96.s 			page 10


 301 012d 00000000 		.4byte	.LFB3
 302 0131 0C000000 		.4byte	.LFE3-.LFB3
 303 0135 01       		.uleb128 0x1
 304 0136 9C       		.byte	0x9c
 305 0137 0D       		.uleb128 0xd
 306 0138 3D020000 		.4byte	.LASF23
 307 013c 01       		.byte	0x1
 308 013d C6       		.byte	0xc6
 309 013e 6B000000 		.4byte	0x6b
 310 0142 00000000 		.4byte	.LFB4
 311 0146 04000000 		.4byte	.LFE4-.LFB4
 312 014a 01       		.uleb128 0x1
 313 014b 9C       		.byte	0x9c
 314 014c 00       		.byte	0
 315              		.section	.debug_abbrev,"",%progbits
 316              	.Ldebug_abbrev0:
 317 0000 01       		.uleb128 0x1
 318 0001 11       		.uleb128 0x11
 319 0002 01       		.byte	0x1
 320 0003 25       		.uleb128 0x25
 321 0004 0E       		.uleb128 0xe
 322 0005 13       		.uleb128 0x13
 323 0006 0B       		.uleb128 0xb
 324 0007 03       		.uleb128 0x3
 325 0008 0E       		.uleb128 0xe
 326 0009 1B       		.uleb128 0x1b
 327 000a 0E       		.uleb128 0xe
 328 000b 55       		.uleb128 0x55
 329 000c 17       		.uleb128 0x17
 330 000d 11       		.uleb128 0x11
 331 000e 01       		.uleb128 0x1
 332 000f 10       		.uleb128 0x10
 333 0010 17       		.uleb128 0x17
 334 0011 00       		.byte	0
 335 0012 00       		.byte	0
 336 0013 02       		.uleb128 0x2
 337 0014 24       		.uleb128 0x24
 338 0015 00       		.byte	0
 339 0016 0B       		.uleb128 0xb
 340 0017 0B       		.uleb128 0xb
 341 0018 3E       		.uleb128 0x3e
 342 0019 0B       		.uleb128 0xb
 343 001a 03       		.uleb128 0x3
 344 001b 0E       		.uleb128 0xe
 345 001c 00       		.byte	0
 346 001d 00       		.byte	0
 347 001e 03       		.uleb128 0x3
 348 001f 24       		.uleb128 0x24
 349 0020 00       		.byte	0
 350 0021 0B       		.uleb128 0xb
 351 0022 0B       		.uleb128 0xb
 352 0023 3E       		.uleb128 0x3e
 353 0024 0B       		.uleb128 0xb
 354 0025 03       		.uleb128 0x3
 355 0026 08       		.uleb128 0x8
 356 0027 00       		.byte	0
 357 0028 00       		.byte	0
ARM GAS  C:\Users\Vit\AppData\Local\Temp\ccJEDx96.s 			page 11


 358 0029 04       		.uleb128 0x4
 359 002a 16       		.uleb128 0x16
 360 002b 00       		.byte	0
 361 002c 03       		.uleb128 0x3
 362 002d 0E       		.uleb128 0xe
 363 002e 3A       		.uleb128 0x3a
 364 002f 0B       		.uleb128 0xb
 365 0030 3B       		.uleb128 0x3b
 366 0031 0B       		.uleb128 0xb
 367 0032 49       		.uleb128 0x49
 368 0033 13       		.uleb128 0x13
 369 0034 00       		.byte	0
 370 0035 00       		.byte	0
 371 0036 05       		.uleb128 0x5
 372 0037 16       		.uleb128 0x16
 373 0038 00       		.byte	0
 374 0039 03       		.uleb128 0x3
 375 003a 0E       		.uleb128 0xe
 376 003b 3A       		.uleb128 0x3a
 377 003c 0B       		.uleb128 0xb
 378 003d 3B       		.uleb128 0x3b
 379 003e 05       		.uleb128 0x5
 380 003f 49       		.uleb128 0x49
 381 0040 13       		.uleb128 0x13
 382 0041 00       		.byte	0
 383 0042 00       		.byte	0
 384 0043 06       		.uleb128 0x6
 385 0044 35       		.uleb128 0x35
 386 0045 00       		.byte	0
 387 0046 49       		.uleb128 0x49
 388 0047 13       		.uleb128 0x13
 389 0048 00       		.byte	0
 390 0049 00       		.byte	0
 391 004a 07       		.uleb128 0x7
 392 004b 2E       		.uleb128 0x2e
 393 004c 00       		.byte	0
 394 004d 3F       		.uleb128 0x3f
 395 004e 19       		.uleb128 0x19
 396 004f 03       		.uleb128 0x3
 397 0050 0E       		.uleb128 0xe
 398 0051 3A       		.uleb128 0x3a
 399 0052 0B       		.uleb128 0xb
 400 0053 3B       		.uleb128 0x3b
 401 0054 0B       		.uleb128 0xb
 402 0055 27       		.uleb128 0x27
 403 0056 19       		.uleb128 0x19
 404 0057 11       		.uleb128 0x11
 405 0058 01       		.uleb128 0x1
 406 0059 12       		.uleb128 0x12
 407 005a 06       		.uleb128 0x6
 408 005b 40       		.uleb128 0x40
 409 005c 18       		.uleb128 0x18
 410 005d 9742     		.uleb128 0x2117
 411 005f 19       		.uleb128 0x19
 412 0060 00       		.byte	0
 413 0061 00       		.byte	0
 414 0062 08       		.uleb128 0x8
ARM GAS  C:\Users\Vit\AppData\Local\Temp\ccJEDx96.s 			page 12


 415 0063 2E       		.uleb128 0x2e
 416 0064 01       		.byte	0x1
 417 0065 3F       		.uleb128 0x3f
 418 0066 19       		.uleb128 0x19
 419 0067 03       		.uleb128 0x3
 420 0068 0E       		.uleb128 0xe
 421 0069 3A       		.uleb128 0x3a
 422 006a 0B       		.uleb128 0xb
 423 006b 3B       		.uleb128 0x3b
 424 006c 0B       		.uleb128 0xb
 425 006d 27       		.uleb128 0x27
 426 006e 19       		.uleb128 0x19
 427 006f 11       		.uleb128 0x11
 428 0070 01       		.uleb128 0x1
 429 0071 12       		.uleb128 0x12
 430 0072 06       		.uleb128 0x6
 431 0073 40       		.uleb128 0x40
 432 0074 18       		.uleb128 0x18
 433 0075 9742     		.uleb128 0x2117
 434 0077 19       		.uleb128 0x19
 435 0078 01       		.uleb128 0x1
 436 0079 13       		.uleb128 0x13
 437 007a 00       		.byte	0
 438 007b 00       		.byte	0
 439 007c 09       		.uleb128 0x9
 440 007d 05       		.uleb128 0x5
 441 007e 00       		.byte	0
 442 007f 03       		.uleb128 0x3
 443 0080 0E       		.uleb128 0xe
 444 0081 3A       		.uleb128 0x3a
 445 0082 0B       		.uleb128 0xb
 446 0083 3B       		.uleb128 0x3b
 447 0084 0B       		.uleb128 0xb
 448 0085 49       		.uleb128 0x49
 449 0086 13       		.uleb128 0x13
 450 0087 02       		.uleb128 0x2
 451 0088 17       		.uleb128 0x17
 452 0089 00       		.byte	0
 453 008a 00       		.byte	0
 454 008b 0A       		.uleb128 0xa
 455 008c 05       		.uleb128 0x5
 456 008d 00       		.byte	0
 457 008e 03       		.uleb128 0x3
 458 008f 0E       		.uleb128 0xe
 459 0090 3A       		.uleb128 0x3a
 460 0091 0B       		.uleb128 0xb
 461 0092 3B       		.uleb128 0x3b
 462 0093 0B       		.uleb128 0xb
 463 0094 49       		.uleb128 0x49
 464 0095 13       		.uleb128 0x13
 465 0096 02       		.uleb128 0x2
 466 0097 18       		.uleb128 0x18
 467 0098 00       		.byte	0
 468 0099 00       		.byte	0
 469 009a 0B       		.uleb128 0xb
 470 009b 34       		.uleb128 0x34
 471 009c 00       		.byte	0
ARM GAS  C:\Users\Vit\AppData\Local\Temp\ccJEDx96.s 			page 13


 472 009d 03       		.uleb128 0x3
 473 009e 0E       		.uleb128 0xe
 474 009f 3A       		.uleb128 0x3a
 475 00a0 0B       		.uleb128 0xb
 476 00a1 3B       		.uleb128 0x3b
 477 00a2 0B       		.uleb128 0xb
 478 00a3 49       		.uleb128 0x49
 479 00a4 13       		.uleb128 0x13
 480 00a5 02       		.uleb128 0x2
 481 00a6 17       		.uleb128 0x17
 482 00a7 00       		.byte	0
 483 00a8 00       		.byte	0
 484 00a9 0C       		.uleb128 0xc
 485 00aa 34       		.uleb128 0x34
 486 00ab 00       		.byte	0
 487 00ac 03       		.uleb128 0x3
 488 00ad 0E       		.uleb128 0xe
 489 00ae 3A       		.uleb128 0x3a
 490 00af 0B       		.uleb128 0xb
 491 00b0 3B       		.uleb128 0x3b
 492 00b1 0B       		.uleb128 0xb
 493 00b2 49       		.uleb128 0x49
 494 00b3 13       		.uleb128 0x13
 495 00b4 02       		.uleb128 0x2
 496 00b5 18       		.uleb128 0x18
 497 00b6 00       		.byte	0
 498 00b7 00       		.byte	0
 499 00b8 0D       		.uleb128 0xd
 500 00b9 2E       		.uleb128 0x2e
 501 00ba 00       		.byte	0
 502 00bb 3F       		.uleb128 0x3f
 503 00bc 19       		.uleb128 0x19
 504 00bd 03       		.uleb128 0x3
 505 00be 0E       		.uleb128 0xe
 506 00bf 3A       		.uleb128 0x3a
 507 00c0 0B       		.uleb128 0xb
 508 00c1 3B       		.uleb128 0x3b
 509 00c2 0B       		.uleb128 0xb
 510 00c3 27       		.uleb128 0x27
 511 00c4 19       		.uleb128 0x19
 512 00c5 49       		.uleb128 0x49
 513 00c6 13       		.uleb128 0x13
 514 00c7 11       		.uleb128 0x11
 515 00c8 01       		.uleb128 0x1
 516 00c9 12       		.uleb128 0x12
 517 00ca 06       		.uleb128 0x6
 518 00cb 40       		.uleb128 0x40
 519 00cc 18       		.uleb128 0x18
 520 00cd 9742     		.uleb128 0x2117
 521 00cf 19       		.uleb128 0x19
 522 00d0 00       		.byte	0
 523 00d1 00       		.byte	0
 524 00d2 00       		.byte	0
 525              		.section	.debug_loc,"",%progbits
 526              	.Ldebug_loc0:
 527              	.LLST0:
 528 0000 00000000 		.4byte	.LVL0
ARM GAS  C:\Users\Vit\AppData\Local\Temp\ccJEDx96.s 			page 14


 529 0004 0A000000 		.4byte	.LVL3
 530 0008 0100     		.2byte	0x1
 531 000a 50       		.byte	0x50
 532 000b 0A000000 		.4byte	.LVL3
 533 000f 14000000 		.4byte	.LFE2
 534 0013 0400     		.2byte	0x4
 535 0015 F3       		.byte	0xf3
 536 0016 01       		.uleb128 0x1
 537 0017 50       		.byte	0x50
 538 0018 9F       		.byte	0x9f
 539 0019 00000000 		.4byte	0
 540 001d 00000000 		.4byte	0
 541              	.LLST1:
 542 0021 04000000 		.4byte	.LVL1
 543 0025 06000000 		.4byte	.LVL2
 544 0029 0800     		.2byte	0x8
 545 002b 73       		.byte	0x73
 546 002c 00       		.sleb128 0
 547 002d 11       		.byte	0x11
 548 002e 80807C   		.sleb128 -65536
 549 0031 1A       		.byte	0x1a
 550 0032 9F       		.byte	0x9f
 551 0033 00000000 		.4byte	0
 552 0037 00000000 		.4byte	0
 553              		.section	.debug_aranges,"",%progbits
 554 0000 3C000000 		.4byte	0x3c
 555 0004 0200     		.2byte	0x2
 556 0006 00000000 		.4byte	.Ldebug_info0
 557 000a 04       		.byte	0x4
 558 000b 00       		.byte	0
 559 000c 0000     		.2byte	0
 560 000e 0000     		.2byte	0
 561 0010 00000000 		.4byte	.LFB0
 562 0014 14000000 		.4byte	.LFE0-.LFB0
 563 0018 00000000 		.4byte	.LFB1
 564 001c 10000000 		.4byte	.LFE1-.LFB1
 565 0020 00000000 		.4byte	.LFB2
 566 0024 14000000 		.4byte	.LFE2-.LFB2
 567 0028 00000000 		.4byte	.LFB3
 568 002c 0C000000 		.4byte	.LFE3-.LFB3
 569 0030 00000000 		.4byte	.LFB4
 570 0034 04000000 		.4byte	.LFE4-.LFB4
 571 0038 00000000 		.4byte	0
 572 003c 00000000 		.4byte	0
 573              		.section	.debug_ranges,"",%progbits
 574              	.Ldebug_ranges0:
 575 0000 00000000 		.4byte	.LFB0
 576 0004 14000000 		.4byte	.LFE0
 577 0008 00000000 		.4byte	.LFB1
 578 000c 10000000 		.4byte	.LFE1
 579 0010 00000000 		.4byte	.LFB2
 580 0014 14000000 		.4byte	.LFE2
 581 0018 00000000 		.4byte	.LFB3
 582 001c 0C000000 		.4byte	.LFE3
 583 0020 00000000 		.4byte	.LFB4
 584 0024 04000000 		.4byte	.LFE4
 585 0028 00000000 		.4byte	0
ARM GAS  C:\Users\Vit\AppData\Local\Temp\ccJEDx96.s 			page 15


 586 002c 00000000 		.4byte	0
 587              		.section	.debug_line,"",%progbits
 588              	.Ldebug_line0:
 589 0000 D1000000 		.section	.debug_str,"MS",%progbits,1
 589      02006200 
 589      00000201 
 589      FB0E0D00 
 589      01010101 
 590              	.LASF15:
 591 0000 72656733 		.ascii	"reg32\000"
 591      3200
 592              	.LASF16:
 593 0006 53746174 		.ascii	"StatusRegCLK_Start\000"
 593      75735265 
 593      67434C4B 
 593      5F537461 
 593      727400
 594              	.LASF24:
 595 0019 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 595      4320342E 
 595      392E3320 
 595      32303135 
 595      30333033 
 596 004c 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 596      20726576 
 596      6973696F 
 596      6E203232 
 596      31323230 
 597 007f 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 597      66756E63 
 597      74696F6E 
 597      2D736563 
 597      74696F6E 
 598              	.LASF20:
 599 00a7 6D61736B 		.ascii	"maskVal\000"
 599      56616C00 
 600              	.LASF12:
 601 00af 666C6F61 		.ascii	"float\000"
 601      7400
 602              	.LASF1:
 603 00b5 756E7369 		.ascii	"unsigned char\000"
 603      676E6564 
 603      20636861 
 603      7200
 604              	.LASF17:
 605 00c3 53746174 		.ascii	"StatusRegCLK_Stop\000"
 605      75735265 
 605      67434C4B 
 605      5F53746F 
 605      7000
 606              	.LASF26:
 607 00d5 433A5C55 		.ascii	"C:\\Users\\Vit\\Documents\\PSoC Creator\\SensorTest"
 607      73657273 
 607      5C566974 
 607      5C446F63 
 607      756D656E 
 608 0103 5C53656E 		.ascii	"\\SensorTest.cydsn\000"
ARM GAS  C:\Users\Vit\AppData\Local\Temp\ccJEDx96.s 			page 16


 608      736F7254 
 608      6573742E 
 608      63796473 
 608      6E00
 609              	.LASF5:
 610 0115 6C6F6E67 		.ascii	"long unsigned int\000"
 610      20756E73 
 610      69676E65 
 610      6420696E 
 610      7400
 611              	.LASF3:
 612 0127 73686F72 		.ascii	"short unsigned int\000"
 612      7420756E 
 612      7369676E 
 612      65642069 
 612      6E7400
 613              	.LASF27:
 614 013a 53746174 		.ascii	"StatusRegCLK_SetFractionalDividerRegister\000"
 614      75735265 
 614      67434C4B 
 614      5F536574 
 614      46726163 
 615              	.LASF18:
 616 0164 636C6B44 		.ascii	"clkDivider\000"
 616      69766964 
 616      657200
 617              	.LASF13:
 618 016f 646F7562 		.ascii	"double\000"
 618      6C6500
 619              	.LASF21:
 620 0176 72656756 		.ascii	"regVal\000"
 620      616C00
 621              	.LASF19:
 622 017d 636C6B46 		.ascii	"clkFractional\000"
 622      72616374 
 622      696F6E61 
 622      6C00
 623              	.LASF10:
 624 018b 75696E74 		.ascii	"uint16\000"
 624      313600
 625              	.LASF25:
 626 0192 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\StatusRegCLK.c\000"
 626      6E657261 
 626      7465645F 
 626      536F7572 
 626      63655C50 
 627              	.LASF11:
 628 01ba 75696E74 		.ascii	"uint32\000"
 628      333200
 629              	.LASF8:
 630 01c1 756E7369 		.ascii	"unsigned int\000"
 630      676E6564 
 630      20696E74 
 630      00
 631              	.LASF7:
 632 01ce 6C6F6E67 		.ascii	"long long unsigned int\000"
 632      206C6F6E 
ARM GAS  C:\Users\Vit\AppData\Local\Temp\ccJEDx96.s 			page 17


 632      6720756E 
 632      7369676E 
 632      65642069 
 633              	.LASF6:
 634 01e5 6C6F6E67 		.ascii	"long long int\000"
 634      206C6F6E 
 634      6720696E 
 634      7400
 635              	.LASF14:
 636 01f3 63686172 		.ascii	"char\000"
 636      00
 637              	.LASF2:
 638 01f8 73686F72 		.ascii	"short int\000"
 638      7420696E 
 638      7400
 639              	.LASF9:
 640 0202 75696E74 		.ascii	"uint8\000"
 640      3800
 641              	.LASF22:
 642 0208 53746174 		.ascii	"StatusRegCLK_GetDividerRegister\000"
 642      75735265 
 642      67434C4B 
 642      5F476574 
 642      44697669 
 643              	.LASF4:
 644 0228 6C6F6E67 		.ascii	"long int\000"
 644      20696E74 
 644      00
 645              	.LASF0:
 646 0231 7369676E 		.ascii	"signed char\000"
 646      65642063 
 646      68617200 
 647              	.LASF23:
 648 023d 53746174 		.ascii	"StatusRegCLK_GetFractionalDividerRegister\000"
 648      75735265 
 648      67434C4B 
 648      5F476574 
 648      46726163 
 649              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
